---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    system: organization-system
    name: organization-system-config
  name: organization-system-config
data:
  quarkus.opentelemetry.tracer.exporter.otlp.endpoint: 'http://jaeger.roseweigee-dev.svc:4317'
  quarkus.rest-client.department.url: 'http://department-service.roseweigee-dev.svc:8080'
  quarkus.rest-client.employee.url: 'http://employee-service.roseweigee-dev.svc:8080'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  labels:
    system: organization-system
    name: jaeger
    app: jaeger
    role: monitoring
    app.kubernetes.io/part-of: monitoring
    app.openshift.io/runtime: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      name: jaeger
  template:
    metadata:
      labels:
        system: organization-system
        name: jaeger
        app: jaeger
        role: monitoring
    spec:
      containers:
        - image: jaegertracing/all-in-one:1
          name: jaeger
          ports:
            - containerPort: 16686
            - containerPort: 14268
            - containerPort: 14250
            - containerPort: 4317
          env:
            - name: COLLECTOR_OTLP_ENABLED
              value: 'true'  
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 32Mi
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  labels:
    name: jaeger
    system: organization-system
    app: jaeger
    role: monitoring
spec:
  ports:
    - port: 16686
      name: ui
      protocol: TCP
      targetPort: 16686
    - port: 14268
      name: thrift
      protocol: TCP
      targetPort: 14268
    - port: 14250
      name: grpc
      protocol: TCP
      targetPort: 14250
    - port: 4317
      name: binary
      protocol: TCP
      targetPort: 4317
  selector:
    name: jaeger
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: monitoring
    system: organization-system
    name: jaeger
    app: jaeger
    role: monitoring
  name: jaeger
spec:
  port:
    targetPort: 16686
  to:
    kind: Service
    name: jaeger
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: employee-service
    app.kubernetes.io/component: employee-service
    app.kubernetes.io/instance: employee-service
  name: employee-service
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: employee-service
  template:
    metadata:
      labels:
        deployment: employee-service
    spec:
      containers:
        - name: employee-service
          image: 'rosewei/employee-service:1.0'
          ports:
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
          env:
            - name: QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.opentelemetry.tracer.exporter.otlp.endpoint
            - name: QUARKUS_REST_CLIENT_DEPARTMENT_URL
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.rest-client.department.url
            - name: QUARKUS_REST_CLIENT_EMPLOYEE_URL
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.rest-client.employee.url
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: employee-service
  labels:
    app: employee-service
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: 8443-tcp
      protocol: TCP
      port: 8443
      targetPort: 8443
  type: ClusterIP
  selector:
    deployment: employee-service
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: employee-service
  labels:
    app: employee-service
    app.kubernetes.io/component: employee-service
    app.kubernetes.io/instance: employee-service
spec:
  to:
    kind: Service
    name: employee-service
  port:
    targetPort: 8080-tcp
  tls:
    termination: edge
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: department-service
    app.kubernetes.io/component: department-service
    app.kubernetes.io/instance: department-service
  name: department-service
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: department-service
  template:
    metadata:
      labels:
        deployment: department-service
    spec:
      containers:
        - name: department-service
          image: 'rosewei/department-service:1.0'
          ports:
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
          env:
            - name: QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.opentelemetry.tracer.exporter.otlp.endpoint
            - name: QUARKUS_REST_CLIENT_DEPARTMENT_URL
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.rest-client.department.url
            - name: QUARKUS_REST_CLIENT_EMPLOYEE_URL
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.rest-client.employee.url
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: department-service
  labels:
    app: department-service
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: 8443-tcp
      protocol: TCP
      port: 8443
      targetPort: 8443
  type: ClusterIP
  selector:
    deployment: department-service
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: department-service
  labels:
    app: department-service
    app.kubernetes.io/component: department-service
    app.kubernetes.io/instance: department-service
spec:
  to:
    kind: Service
    name: department-service
  port:
    targetPort: 8080-tcp
  tls:
    termination: edge
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: organization-service
    app.kubernetes.io/component: organization-service
    app.kubernetes.io/instance: organization-service
  name: organization-service
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: organization-service
  template:
    metadata:
      labels:
        deployment: organization-service
    spec:
      containers:
        - name: organization-service
          image: 'rosewei/organization-service:1.0'
          ports:
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
          env:
            - name: QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.opentelemetry.tracer.exporter.otlp.endpoint
            - name: QUARKUS_REST_CLIENT_DEPARTMENT_URL
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.rest-client.department.url
            - name: QUARKUS_REST_CLIENT_EMPLOYEE_URL
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.rest-client.employee.url
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: organization-service
  labels:
    app: organization-service
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: 8443-tcp
      protocol: TCP
      port: 8443
      targetPort: 8443
  type: ClusterIP
  selector:
    deployment: organization-service
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: organization-service
  labels:
    app: organization-service
    app.kubernetes.io/component: organization-service
    app.kubernetes.io/instance: organization-service
spec:
  to:
    kind: Service
    name: organization-service
  port:
    targetPort: 8080-tcp
  tls:
    termination: edge
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: organization-system-prometheus-config
data:
  prometheus.yml: |
    # prometheus.yml 文件內容
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'employee-service'
        metrics_path: '/q/metrics'
        static_configs:
          - targets: ['employee-service.roseweigee-dev.svc:8080']
      - job_name: 'department-service'
        metrics_path: '/q/metrics'
        static_configs:
          - targets: ['department-service.roseweigee-dev.svc:8080']    
      - job_name: 'organization-service'
        metrics_path: '/q/metrics'
        static_configs:
          - targets: ['organization-service.roseweigee-dev.svc:8080']     
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.42.0
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.enable-lifecycle'
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: storage-volume
          mountPath: /prometheus
      volumes:
      - name: config-volume
        configMap:
          name: organization-system-prometheus-config
      - name: storage-volume
        emptyDir: {}
---
kind: Service
apiVersion: v1
metadata:
  name: prometheus
spec:
  ports:
    - name: graph
      protocol: TCP
      port: 9090
      targetPort: 9090
  type: ClusterIP    
  selector:
    app: prometheus
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: prometheus
spec:
  to:
    kind: Service
    name: prometheus
    weight: 100
  port:
    targetPort: 9090

        
    
        
