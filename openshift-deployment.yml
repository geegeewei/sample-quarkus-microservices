---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    system: organization-system
    name: organization-system-config
  name: organization-system-config
data:
  quarkus.opentelemetry.tracer.exporter.otlp.endpoint: 'http://jaeger.roseweigee-dev.svc:4317'
  quarkus.rest-client.department.url: 'http://department-service.roseweigee-dev.svc:8080'
  quarkus.rest-client.employee.url: 'http://employee-service.roseweigee-dev.svc:8080'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  labels:
    system: organization-system
    name: jaeger
    app: jaeger
    role: monitoring
    app.kubernetes.io/part-of: monitoring
    app.openshift.io/runtime: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      name: jaeger
  template:
    metadata:
      labels:
        system: organization-system
        name: jaeger
        app: jaeger
        role: monitoring
    spec:
      containers:
        - image: jaegertracing/all-in-one:1
          name: jaeger
          ports:
            - containerPort: 16686
            - containerPort: 14268
            - containerPort: 14250
            - containerPort: 4317
          env:
            - name: COLLECTOR_OTLP_ENABLED
              value: 'true'  
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 32Mi
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  labels:
    name: jaeger
    system: organization-system
    app: jaeger
    role: monitoring
spec:
  ports:
    - port: 16686
      name: ui
      protocol: TCP
      targetPort: 16686
    - port: 14268
      name: thrift
      protocol: TCP
      targetPort: 14268
    - port: 14250
      name: grpc
      protocol: TCP
      targetPort: 14250
    - port: 4317
      name: binary
      protocol: TCP
      targetPort: 4317
  selector:
    name: jaeger
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: monitoring
    system: organization-system
    name: jaeger
    app: jaeger
    role: monitoring
  name: jaeger
spec:
  port:
    targetPort: 16686
  to:
    kind: Service
    name: jaeger
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: employee-service
    app.kubernetes.io/component: employee-service
    app.kubernetes.io/instance: employee-service
  name: employee-service
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: employee-service
  template:
    metadata:
      labels:
        deployment: employee-service
    spec:
      containers:
        - name: employee-service
          image: 'rosewei/employee-service@sha256:0972c04e3438abc97d7aeae23f51d4ed89d585ade6ebba855a9341c69fe026ef'
          ports:
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
          env:
            - name: QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.opentelemetry.tracer.exporter.otlp.endpoint
            - name: QUARKUS_REST_CLIENT_DEPARTMENT_URL
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.rest-client.department.url
            - name: QUARKUS_REST_CLIENT_EMPLOYEE_URL
              valueFrom:
                configMapKeyRef:
                  name: organization-system-config
                  key: quarkus.rest-client.employee.url
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: employee-service
  labels:
    app: employee-service
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: 8443-tcp
      protocol: TCP
      port: 8443
      targetPort: 8443
  type: ClusterIP
  selector:
    deployment: employee-service
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: employee-service
  labels:
    app: employee-service
    app.kubernetes.io/component: employee-service
    app.kubernetes.io/instance: employee-service
spec:
  to:
    kind: Service
    name: employee-service
  port:
    targetPort: 8080-tcp
  tls:
    termination: edge
